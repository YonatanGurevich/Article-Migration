# Generated by Selenium IDE
# import pytest
# import time
from shutil import copyfile
import json
import os
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.common.exceptions import NoSuchElementException
# from selenium.webdriver.common.action_chains import ActionChains
# from selenium.webdriver.support import expected_conditions
# from selenium.webdriver.support.wait import WebDriverWait
# from selenium.webdriver.common.keys import Keys
# from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class AddArticle:

    def __init__(self):
        self.driver = webdriver.Firefox(executable_path="C:\\dev\\java\\geckodriver.exe")

    def setup_method(self):  # (self, method)
        # self.driver = webdriver.Chrome("C:\\Users\\jonat\\OneDrive\\שולחן העבודה\\Selenium\\chromedriver.exe")
        # self.vars = {}
        pass

    def teardown_method(self):  # (self, method)
        self.driver.quit()

    def add_article(self, title):
        """
        Create a new article - provide h2 title
        :param title: h2 title (main title)
        """
        self.driver.get(
            "https://rt-ed.com/wp-admin/")
        self.driver.set_window_size(1552, 840)
        self.driver.find_element(By.ID, "user_login").send_keys("admin")
        self.driver.find_element(By.ID, "user_pass").send_keys("rt-world1313")
        self.driver.find_element(By.ID, "wp-submit").click()
        self.driver.find_element(By.CSS_SELECTOR, ".menu-icon-articles > .wp-menu-name").click()
        self.driver.find_element(By.CSS_SELECTOR, ".page-title-action").click()
        try:
            self.driver.implicitly_wait(1)
            self.driver.find_element(By.CSS_SELECTOR, ".components-modal__header svg").click()
        except NoSuchElementException:
            pass
        self.driver.find_element(By.ID, "post-title-0").click()
        self.driver.find_element(By.ID, "post-title-0").send_keys(title)

    def add_title(self, title):
        """
        Add a paragraph title (h3 title)
        :param title: h3 title
        """

        self.driver.find_element(By.ID, "article_section_header").clear()
        self.driver.find_element(By.ID, "article_section_header").click()
        self.driver.find_element(By.ID, "article_section_header").send_keys(title)

    def add_paragraph(self, paragraph):
        self.driver.find_element(By.ID, "content_related_articles").clear()
        self.driver.find_element(By.ID, "content_related_articles").click()
        self.driver.find_element(By.ID, "content_related_articles").send_keys(paragraph)
        self.driver.find_element(By.ID, "add-article-section-btn").click()

    def publish(self):
        """
        After adding titles and paragraphs, selects "Generic article" template and published the page
        """
        # self.driver.find_element(By.CSS_SELECTOR, ".components-panel__body:nth-child(5) .components-button").click()
        # self.driver.find_element(By.ID, "inspector-select-control-0").click()
        # dropdown = self.driver.find_element(By.ID, "inspector-select-control-0")
        # dropdown.find_element(By.XPATH, "//option[. = 'Generic article']").click()
        # self.driver.find_element(By.ID, "inspector-select-control-0").click()
        # self.driver.find_element(By.CSS_SELECTOR, ".editor-post-publish-panel__toggle").click()
        # self.driver.find_element(By.CSS_SELECTOR, ".editor-post-publish-button").click()
        try:
            self.driver.find_element(By.CSS_SELECTOR, "li:nth-child(1) > .components-button").click()
        except Exception:
            pass
        self.driver.find_element(By.CSS_SELECTOR, ".components-panel__body:nth-child(6) .components-button").click()
        self.driver.find_element(By.ID, "inspector-select-control-1").click()
        dropdown = self.driver.find_element(By.ID, "inspector-select-control-1")
        dropdown.find_element(By.XPATH, "//option[. = 'Generic article']").click()
        self.driver.find_element(By.ID, "inspector-select-control-1").click()
        self.driver.find_element(By.CSS_SELECTOR, ".editor-post-save-draft").click()
        # self.driver.find_element_by_xpath('//*[@id="editor"]/div[1]/div[1]/div[1]/div/div[2]/button[1]').click()
        self.driver.close()


if __name__ == '__main__':
    jsons = os.listdir("jsons")  # All articles in json format which includes titles and sections
    for article in jsons:
        file = open("jsons/{}".format(article), 'r')
        article_json = file.read()
        article_dict = json.loads(article_json)
        Tester = AddArticle()
        if article_dict['title'] != "":
            Tester.add_article(article_dict['title'])
        else:
            Tester.add_article("Real Time Group")
        for section in article_dict['sections']:
            Tester.add_title(section['title'])
            Tester.add_paragraph(section['content'])
        Tester.publish()
        copyfile("jsons\\{}".format(article), "done\\{}".format(article))
